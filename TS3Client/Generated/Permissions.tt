<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.VisualBasic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualBasic.FileIO" #>
<#@ output extension=".cs" #>

<#
string declFilePath = Host.ResolvePath("../Declarations/Permissions.csv");
var data = new List<string[]>();
using (TextFieldParser parser = new TextFieldParser(declFilePath))
{
	parser.TextFieldType = FieldType.Delimited;
	parser.SetDelimiters(",");
	while (!parser.EndOfData)
		data.Add(parser.ReadFields());
}
#>

namespace TS3Client
{
	using Helper;

	// Source: https://www.tsviewer.com/index.php?page=faq&id=12&newlanguage=en
	public enum PermissionId : int
	{
		// ReSharper disable InconsistentNaming, UnusedMember.Global
		undefined = -1,<# foreach (var line in data.Skip(1)) { #>
		<#= line[0] #> = <#= line[2] #>,<# } #>
		// ReSharper enable InconsistentNaming, UnusedMember.Global
	}

	public static class PerissionInfo
	{
		public static string Get(PermissionId permid)
		{
			switch (permid)
			{
			// ReSharper disable InconsistentNaming, UnusedMember.Global
			case PermissionId.undefined: return "Undefined permission";<# foreach (var line in data.Skip(1)) { #>
			case PermissionId.<#= line[0] #> : return "<#= line[1] #>";<# } #>
			default: throw Util.UnhandledDefault(permid);
			// ReSharper enable InconsistentNaming, UnusedMember.Global
			}
		}
	}
}